import meta from './commons/meta.marko';

<!doctype html>
<html>
<head>
    <include(meta, input)/>
    <!-- Styles will be inserted inline by build process -->
    <style>{{shell.css}}</style>
    <script>
      var __kubric_config__ = {
        isMobile: $!{input.isMobile},
        env: '$!{input.env}',
        root: '$!{input.root}',
        studioRoot: '$!{input.studioRoot}',
        auth: $!{input.auth},
        queueAuth: $!{input.queueAuth}
      };

      var intercomSettings = $!{input.intercomSettings};
      intercomSettings.custom_launcher_selector = "#need-help";
    </script>
    <script>
      if(intercomSettings){

        (function(){var w=window;var ic=w.Intercom;if(typeof ic==="function")
        {ic('reattach_activator');ic('update',intercomSettings);}else
        {var d=document;var i=function(){i.c(arguments)};i.q=[];i.c=function(args)
        {i.q.push(args)};w.Intercom=i;function l()
        {var s=d.createElement('script');s.type='text/javascript';s.async=true;
          s.src='https://widget.intercom.io/widget/' + intercomSettings.app_id;
          var x=d.getElementsByTagName('script')[0];
          x.parentNode.insertBefore(s,x);}if(w.attachEvent){w.attachEvent('onload',l);}
        else{w.addEventListener('load',l,false);}}})();
        
        /* load segment script */
        !function(){var analytics=window.analytics=window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&&console.error&&console.error("Segment snippet included twice.");else{analytics.invoked=!0;analytics.methods=["trackSubmit","trackClick","trackLink","trackForm","pageview","identify","reset","group","track","ready","alias","debug","page","once","off","on"];analytics.factory=function(t){return function(){var e=Array.prototype.slice.call(arguments);e.unshift(t);analytics.push(e);return analytics}};for(var t=0;t<analytics.methods.length;t++){var e=analytics.methods[t];analytics[e]=analytics.factory(e)}analytics.load=function(t,e){var n=document.createElement("script");n.type="text/javascript";n.async=!0;n.src="https://cdn.segment.com/analytics.js/v1/"+t+"/analytics.min.js";var a=document.getElementsByTagName("script")[0];a.parentNode.insertBefore(n,a);analytics._loadOptions=e};analytics.SNIPPET_VERSION="4.1.0";
        analytics.load("07GOok2YqrNzHVyMYKgQa1uCTx6lDdLa");
        analytics.page();
        }}();
        
        analytics.identify(intercomSettings.user_id,{userId: intercomSettings.user_id, email:intercomSettings.email, name: intercomSettings.name, workspace: intercomSettings.workspace});
      }
    </script>
    <script src='https://static.segment.com/enable-button/v1/index.js'></script>
    
    <script type="text/javascript">
      (function(e,t){var n=e.amplitude||{_q:[],_iq:{}};var r=t.createElement("script")
      ;r.type="text/javascript";r.async=true
      ;r.src="https://cdn.amplitude.com/libs/amplitude-4.1.0-min.gz.js"
      ;r.onload=function(){if(e.amplitude.runQueuedFunctions){
        e.amplitude.runQueuedFunctions()}else{
        console.log("[Amplitude] Error: could not load SDK")}}
      ;var i=t.getElementsByTagName("script")[0];i.parentNode.insertBefore(r,i)
      ;function s(e,t){e.prototype[t]=function(){
        this._q.push([t].concat(Array.prototype.slice.call(arguments,0)));return this}}
        var o=function(){this._q=[];return this}
        ;var a=["add","append","clearAll","prepend","set","setOnce","unset"]
        ;for(var u=0;u<a.length;u++){s(o,a[u])}n.Identify=o;var c=function(){this._q=[]
          ;return this}
        ;var l=["setProductId","setQuantity","setPrice","setRevenueType","setEventProperties"]
        ;for(var p=0;p<l.length;p++){s(c,l[p])}n.Revenue=c
        ;var d=["init","logEvent","logRevenue","setUserId","setUserProperties","setOptOut","setVersionName","setDomain","setDeviceId","setGlobalUserProperties","identify","clearUserProperties","setGroup","logRevenueV2","regenerateDeviceId","logEventWithTimestamp","logEventWithGroups","setSessionId"]
        ;function v(e){function t(t){e[t]=function(){
          e._q.push([t].concat(Array.prototype.slice.call(arguments,0)))}}
          for(var n=0;n<d.length;n++){t(d[n])}}v(n);n.getInstance=function(e){
          e=(!e||e.length===0?"$default_instance":e).toLowerCase()
          ;if(!n._iq.hasOwnProperty(e)){n._iq[e]={_q:[]};v(n._iq[e])}return n._iq[e]}
        ;e.amplitude=n})(window,document);

      amplitude.getInstance().init("be90db5274b48916c988cf9d5e0f2101");
    </script>
    <link rel="stylesheet" href="${input.assets.css.app}">
    <script type="text/javascript" src="${input.assets.js.vendor}"/>
    <script type="text/javascript" src="${input.assets.js.app}"/>
    <style type="text/css">
      .apiKey {
      background: #ddeeee;
      padding: 4px;
      border-radius: 4px;
      display: inline-block;
      }
    </style>

    
</head>
<body>
<div class="app-container">
    <div class="page-content">
        <div id="content" class="content"></div>
        <div id="shell-spinner" class="overlay">
            <svg class="spinner" viewBox="0 0 60 60">
                <circle class="circle" cx="30" cy="30" r="25"></circle>
            </svg>
        </div>
    </div>
</div>
<await (data from input.dataProvider) client-reorder timeout=0>
    <if(data)>
        <script>
          var __kubric_data__ = $!{JSON.stringify(data)};
        </script>
    </if>
    <script>
        __kubric_config__.pageLoaded = true;
    </script>
    <script type="text/javascript">    
    window.onload = ()=>{
      var segmentBTn = document.getElementById('segment-button');
      if(segmentBTn) {
        var email = $!{JSON.stringify(data)}.user.email;
        segmentBTn.innerHTML = `<div class="segment-enable-button" data-integration="kubric" data-redirect-url="https://app.kubric.io" data-size="small" data-settings='{"apiKey":"${btoa(email)}"}'></div>`;        
        window.segment.EnableButton.init();
      }
      
    }
    </script>
</await>
</body>
</html>